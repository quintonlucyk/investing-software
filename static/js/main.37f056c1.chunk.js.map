{"version":3,"sources":["Components/DisplayProfileData.js","APICalls/FinancialModellingPrep.js","Pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["DisplayProfileData","this","props","profile","undefined","Error","react_default","a","createElement","Fragment","console","log","companyName","price","changes","changesPercentage","exchange","industry","React","Component","profileCall","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","symbol","res","json","wrap","_context","prev","next","fetch","concat","sent","abrupt","t0","error","stop","_x","apply","arguments","ratiosCall","_ref2","_callee2","_context2","_x2","library","add","faSpinner","Main","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","search","event","ratios","preventDefault","symbolRef","current","value","toUpperCase","setState","loading","createRef","state","className","Form_default","inline","onSubmit","Group","Label","Control","type","ref","placeholder","Button_default","variant","index_es","size","icon","Components_DisplayProfileData","App","Pages_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37f056c1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass DisplayProfileData extends React.Component {\r\n    render(){\r\n        if (this.props.profile == null) {\r\n            return (\r\n                null\r\n            );\r\n        } else if (this.props.profile.Error !== undefined) {\r\n            return (\r\n                <React.Fragment>\r\n                    <p>Shoots. Looks like something went wrong. Here is the error we got:</p>\r\n                    <p>{this.props.profile.Error}</p>\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            console.log(this.props.profile);\r\n            return (\r\n                <React.Fragment>\r\n                <ul>\r\n                    <li>Company Name: {this.props.profile.profile.companyName}</li>\r\n                    <li>Price: ${this.props.profile.profile.price}</li>\r\n                    <li>Changes (%): ${this.props.profile.profile.changes} {this.props.profile.profile.changesPercentage}</li>\r\n                    <li>Exchange: {this.props.profile.profile.exchange}</li>\r\n                    <li>Industry: {this.props.profile.profile.industry}</li>\r\n                </ul>\r\n                \r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default DisplayProfileData;","export const profileCall = async (symbol) => {\r\n    try {\r\n        const res = await fetch(`https://financialmodelingprep.com/api/v3/company/profile/${symbol}`);\r\n        const json = await res.json();\r\n        return (json);\r\n    } catch (error) {\r\n        return ({error: error});\r\n    }\r\n}\r\n\r\nexport const ratiosCall = async (symbol) => {\r\n    try {\r\n        const res = await fetch(`https://financialmodelingprep.com/api/v3/financial-ratios/${symbol}`);\r\n        const json = await res.json();\r\n        return (json);\r\n    } catch (error) {\r\n        return ({error: error});\r\n    }\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DisplayProfileData from '../Components/DisplayProfileData';\r\nimport { profileCall, ratiosCall } from '../APICalls/FinancialModellingPrep';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faSpinner);\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.symbolRef = React.createRef();\r\n        this.state = {\r\n            loading: false,\r\n            profile: null,\r\n            ratios: null,\r\n        }\r\n    }\r\n\r\n    search = async (event) => {\r\n        event.preventDefault();\r\n        const symbol = this.symbolRef.current.value.toUpperCase();\r\n        this.setState({\r\n            loading: true,\r\n            profile: null,\r\n            ratios: null,\r\n        });\r\n        const profile = await profileCall(symbol);\r\n        const ratios = await ratiosCall(symbol);\r\n        console.log('profile', profile);\r\n        console.log('ratios', ratios);\r\n        this.setState({\r\n            loading: false,\r\n            profile: profile,\r\n            ratios: ratios\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App container\" >\r\n                <div className=\"row justify-content-center m-4\">\r\n                        <Form inline onSubmit={this.search}>\r\n                            <Form.Group>\r\n                                <Form.Label className=\"m-2\">Stock Symbol </Form.Label>\r\n                                <Form.Control className=\"m-2\" type=\"text\" ref={this.symbolRef} placeholder=\"Enter symbol\" />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" className=\"m-2\" type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                </div>\r\n                <div className=\"row justify-content-center m-4\">\r\n                    {this.state.loading && (\r\n                        <FontAwesomeIcon className=\"fa-spin\" size=\"lg\" icon=\"spinner\" />\r\n                    )}\r\n                    <DisplayProfileData profile={this.state.profile} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport Main from './Pages/Main';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <Main />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}