{"version":3,"sources":["Components/DisplayProfileData.js","Components/DisplayMetricsData.js","APICalls/FinancialModellingPrep.js","Pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["DisplayProfileData","this","props","profile","undefined","Error","react_default","a","createElement","Fragment","console","log","companyName","price","changes","changesPercentage","exchange","industry","React","Component","DisplayMetricsData","metrics","tenYearRoic","fiveYearRoic","oneYearRoic","i","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","yearData","value","ROIC","float","parseFloat","Number","toFixed","err","return","Table_default","striped","bordered","hover","profileCall","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","symbol","res","json","wrap","_context","prev","fetch","concat","sent","abrupt","t0","error","stop","_x","apply","arguments","metricsCall","_ref2","_callee2","_context2","_x2","library","add","faSpinner","Main","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","search","event","preventDefault","symbolRef","current","toUpperCase","setState","loading","createRef","state","className","Form_default","inline","onSubmit","Group","Label","Control","type","ref","placeholder","Button_default","variant","index_es","size","icon","Components_DisplayProfileData","Components_DisplayMetricsData","App","Pages_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.729d4a12.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass DisplayProfileData extends React.Component {\r\n  render() {\r\n    if (this.props.profile == null) {\r\n      return null;\r\n    } else if (this.props.profile.Error !== undefined) {\r\n      return (\r\n        <React.Fragment>\r\n          <p>\r\n            Shoots. Looks like something went wrong. Here is the error we got:\r\n          </p>\r\n          <p>{this.props.profile.Error}</p>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      console.log(this.props.profile);\r\n      return (\r\n        <React.Fragment>\r\n          <ul>\r\n            <li>Company Name: {this.props.profile.profile.companyName}</li>\r\n            <li>Price: ${this.props.profile.profile.price}</li>\r\n            <li>\r\n              Changes (%): ${this.props.profile.profile.changes}{\" \"}\r\n              {this.props.profile.profile.changesPercentage}\r\n            </li>\r\n            <li>Exchange: {this.props.profile.profile.exchange}</li>\r\n            <li>Industry: {this.props.profile.profile.industry}</li>\r\n          </ul>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default DisplayProfileData;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nclass DisplayMetricsData extends React.Component {\r\n  render() {\r\n    if (this.props.metrics == null) {\r\n      return null;\r\n    } else if (this.props.metrics.Error === undefined) {\r\n      let tenYearRoic = 0;\r\n      let fiveYearRoic = 0;\r\n      let oneYearRoic = 0;\r\n      let i = 0;\r\n      for (let yearData of this.props.metrics.metrics) {\r\n        if (yearData.ROIC !== \"\") {\r\n          let float = parseFloat(yearData.ROIC) * 100;\r\n          if (i < 1) {\r\n            tenYearRoic += float;\r\n            fiveYearRoic += float;\r\n            oneYearRoic = Number.parseFloat(float).toFixed(2);\r\n          } else if (i < 5) {\r\n            tenYearRoic += float;\r\n            fiveYearRoic += float;\r\n          } else if (i < 10) {\r\n            tenYearRoic += float;\r\n          } else {\r\n            break;\r\n          }\r\n        } else {\r\n          if (i < 5) {\r\n            tenYearRoic = \"NA\";\r\n            fiveYearRoic = \"NA\";\r\n          } else {\r\n            tenYearRoic = \"NA\";\r\n          }\r\n        }\r\n        ++i;\r\n      }\r\n      tenYearRoic =\r\n        tenYearRoic === \"NA\"\r\n          ? \"NA\"\r\n          : Number.parseFloat(tenYearRoic / 10).toFixed(2);\r\n      fiveYearRoic =\r\n        fiveYearRoic === \"NA\"\r\n          ? \"NA\"\r\n          : Number.parseFloat(fiveYearRoic / 5).toFixed(2);\r\n      return (\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th />\r\n              <th>One Year</th>\r\n              <th>Five Year Average</th>\r\n              <th>Ten Year Average</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>ROIC</td>\r\n              <td>{oneYearRoic}</td>\r\n              <td>{fiveYearRoic}</td>\r\n              <td>{tenYearRoic}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DisplayMetricsData;\r\n","export const profileCall = async symbol => {\r\n  try {\r\n    const res = await fetch(\r\n      `https://financialmodelingprep.com/api/v3/company/profile/${symbol}`\r\n    );\r\n    const json = await res.json();\r\n    return json;\r\n  } catch (error) {\r\n    return { error: error };\r\n  }\r\n};\r\n\r\nexport const metricsCall = async symbol => {\r\n  try {\r\n    const res = await fetch(\r\n      `https://financialmodelingprep.com/api/v3/company-key-metrics/${symbol}`\r\n    );\r\n    const json = await res.json();\r\n    return json;\r\n  } catch (error) {\r\n    return { error: error };\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport DisplayProfileData from \"../Components/DisplayProfileData\";\r\nimport DisplayMetricsData from \"../Components/DisplayMetricsData\";\r\nimport { profileCall, metricsCall } from \"../APICalls/FinancialModellingPrep\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faSpinner);\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.symbolRef = React.createRef();\r\n    this.state = {\r\n      loading: false,\r\n      profile: null,\r\n      metrics: null\r\n    };\r\n  }\r\n\r\n  search = async event => {\r\n    event.preventDefault();\r\n    const symbol = this.symbolRef.current.value.toUpperCase();\r\n    this.setState({\r\n      loading: true,\r\n      profile: null,\r\n      metrics: null\r\n    });\r\n    const profile = await profileCall(symbol);\r\n    const metrics = await metricsCall(symbol);\r\n    this.setState({\r\n      loading: false,\r\n      profile: profile,\r\n      metrics: metrics\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App container\">\r\n        <div className=\"row justify-content-center m-4\">\r\n          <Form inline onSubmit={this.search}>\r\n            <Form.Group>\r\n              <Form.Label className=\"m-2\">Stock Symbol </Form.Label>\r\n              <Form.Control\r\n                className=\"m-2\"\r\n                type=\"text\"\r\n                ref={this.symbolRef}\r\n                placeholder=\"Enter symbol\"\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" className=\"m-2\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n        <div className=\"row justify-content-center m-4\">\r\n          {this.state.loading && (\r\n            <FontAwesomeIcon className=\"fa-spin\" size=\"lg\" icon=\"spinner\" />\r\n          )}\r\n          <DisplayProfileData profile={this.state.profile} />\r\n          <DisplayMetricsData metrics={this.state.metrics} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Main from \"./Pages/Main\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  return <Main />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}