{"version":3,"sources":["Components/Data.js","Pages/Main.js","Components/DataTwo.js","Components/DataThree.js","App.js","serviceWorker.js","index.js"],"names":["Data","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","isLoaded","items","_this2","fetch","concat","symbol","then","res","json","result","setState","_this$state","react_default","a","createElement","message","ListGroup_default","variant","Item","React","Component","Main","handleSubmit","event","preventDefault","searchedSymbol","symbolRef","current","value","toUpperCase","createRef","className","onSubmit","type","ref","placeholder","Components_Data","App","Pages_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44e71136.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nclass Data extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${this.props.symbol}&interval=5min&apikey=DG61VKY2XF1OVBWJ`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        items: result\r\n                    });\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else if (items[\"Meta Data\"]) {\r\n            return (\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>{`1. Information: ${items[\"Meta Data\"][[\"1. Information\"]]}`}</ListGroup.Item>\r\n                    <ListGroup.Item>{`2. Symbol: ${items[\"Meta Data\"][[\"2. Symbol\"]]}`}</ListGroup.Item>\r\n                    <ListGroup.Item>{`3. Last Refreshed: ${items[\"Meta Data\"][[\"3. Last Refreshed\"]]}`}</ListGroup.Item>\r\n                    <ListGroup.Item>{`4. Interval: ${items[\"Meta Data\"][[\"4. Interval\"]]}`}</ListGroup.Item>\r\n                    <ListGroup.Item>{`5. Output Size: ${items[\"Meta Data\"][[\"5. Output Size\"]]}`}</ListGroup.Item>\r\n                </ListGroup>\r\n            );\r\n        } else if (items[\"Error Message\"]) {\r\n            return (\r\n                <ListGroup>\r\n                    <ListGroup.Item variant=\"danger\">No Luck for That Symbol</ListGroup.Item>\r\n                </ListGroup>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Data;","import React from 'react';\r\nimport Data from '../Components/Data';\r\nimport DataTwo from '../Components/DataTwo';\r\nimport DataThree from '../Components/DataThree';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchedSymbol: \"\"\r\n        }\r\n        this.symbolRef = React.createRef();\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ searchedSymbol: this.symbolRef.current.value.toUpperCase() });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App container\" >\r\n                <div className=\"row justify-content-center m-4\">\r\n                    <div className=\"col-6\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input type=\"text\" ref={this.symbolRef} placeholder=\"Enter symbol here\" />\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                {this.state.searchedSymbol && (\r\n                    <Data symbol={this.state.searchedSymbol} />\r\n                    // <DataTwo symbol={this.state.searchedSymbol} />\r\n                    // <DataThree symbol={this.state.searchedSymbol} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nclass DataTwo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`https://cloud-sse.iexapis.com/stable/stocksUS?token=pk_4d65f48c062e4b32addd9bb185f608a6&symbols=${this.props.symbol}`)\r\n            //https://cloud.iexapis.com/stable/stock/${this.props.symbol}/quote?token=pk_4d65f48c062e4b32addd9bb185f608a6\r\n            //https://cloud-sse.iexapis.com/stable/stocksUS?token=YOUR_TOKEN&symbols=spy\r\n            //pk_4d65f48c062e4b32addd9bb185f608a6\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        items: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            console.log(items);\r\n            return <div>Success</div>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataTwo;","import React from 'react';\r\n\r\nclass DataThree extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.symbol);\r\n        fetch(`https://api-v2.intrinio.com/companies/${this.props.symbol}?api_key=OmQxOTk5MGUxYzIyNzhjOTZlMjdhZTBlNmJiMWI4MDY2`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        items: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            console.log(items);\r\n            return <div>Success</div>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataThree;","import React from 'react';\r\nimport Main from './Pages/Main';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <Main />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}